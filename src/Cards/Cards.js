import React, { Component } from 'react';

class Cards extends Component {

  constructor(props) {
    super(props);
    this.state = {
      active: null
    };
    //this._itemOnClick = this._itemOnClick.bind(this);
  }

  _loadCommentsFromServer() {
    $.ajax({
      url: this.props.url,
      dataType: 'json',
      cache: false,
      success: function(data) {
        this.setState({data: data});
      }.bind(this),
      error: function(xhr, status, err) {
        console.error(this.props.url, status, err.toString());
      }.bind(this)
    });
  }

  _handleCommentSubmit() {
    var comments = this.state.data;
    //console.log(comments);
    // Optimistically set an id on the new comment. It will be replaced by an
    // id generated by the server. In a production application you would likely
    // not use Date.now() for this and would have a more robust system in place.
    comment.id = Date.now();
    var newComments = comments.concat([comment]);
    this.setState({data: newComments});
    $.ajax({
      url: this.props.url,
      dataType: 'json',
      type: 'POST',
      data: comment,
      success: function(data) {
        this.setState({data: data});
      }.bind(this),
      error: function(xhr, status, err) {
        this.setState({data: comments});
        console.error(this.props.url, status, err.toString());
      }.bind(this)
    });
  }

  render() {
    console.log(this.props);
    return (
      <div className="cards">
        <br />
        <br />
        <div>cards in dev</div>
        <br />
        <br />
      </div>
    );
  }
}

export default Cards;
